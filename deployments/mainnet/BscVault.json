{
  "address": "0xE0245d079295246e570894ec6014713ED276efF3",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_shares",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "EmergencyWithdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "Invest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_oldAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "_newAdmin",
          "type": "address"
        }
      ],
      "name": "SetAdmin",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_wallet",
          "type": "address"
        }
      ],
      "name": "SetCommunityWallet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "SetDepositFeePerc",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_wallet",
          "type": "address"
        }
      ],
      "name": "SetStrategistWallet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_wallet",
          "type": "address"
        }
      ],
      "name": "SetTreasuryWallet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "name": "SetWhitelist",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "SetYieldFeePerc",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_shares",
          "type": "uint256"
        }
      ],
      "name": "Withdraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "Yield",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "YieldFee",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CAKE",
      "outputs": [
        {
          "internalType": "contract IERC20Upgradeable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MasterChef",
      "outputs": [
        {
          "internalType": "contract IMasterChef",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PckRouter",
      "outputs": [
        {
          "internalType": "contract IUniRouter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WBNB",
      "outputs": [
        {
          "internalType": "contract IERC20Upgradeable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "communityWallet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depositFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "emergencyWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllPool",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllPoolInBNB",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_valueInBNB",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllPoolInUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "inUSD",
          "type": "bool"
        }
      ],
      "name": "getPricePerFullShare",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_pid",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_treasury",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_communityWallet",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_strategist",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "invest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isWhitelisted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lpToken",
      "outputs": [
        {
          "internalType": "contract IUniPair",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reInvest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newAdmin",
          "type": "address"
        }
      ],
      "name": "setAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_wallet",
          "type": "address"
        }
      ],
      "name": "setCommunityWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_depositFeePerc",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_yieldFeePerc",
          "type": "uint256"
        }
      ],
      "name": "setFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_isFeeEnabled",
          "type": "bool"
        }
      ],
      "name": "setFeeStatus",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_wallet",
          "type": "address"
        }
      ],
      "name": "setStrategistWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_wallet",
          "type": "address"
        }
      ],
      "name": "setTreasuryWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_addr",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_value",
          "type": "bool"
        }
      ],
      "name": "setWhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "strategist",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token0",
      "outputs": [
        {
          "internalType": "contract IERC20Upgradeable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token1",
      "outputs": [
        {
          "internalType": "contract IERC20Upgradeable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "transferFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "treasuryWallet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_shares",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "yield",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "yieldFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xbe378f06008e44728c8cee3e695ac038ef2dcb9ee97de12eccf3c93540558cb9",
  "receipt": {
    "to": null,
    "from": "0x3f68A3c1023d736D8Be867CA49Cb18c543373B99",
    "contractAddress": "0xE0245d079295246e570894ec6014713ED276efF3",
    "transactionIndex": 70,
    "gasUsed": "3708731",
    "logsBloom": "0x
    "blockHash": "0xae5d314b36f68fc23d7dfc12b612786df4426e39ba08dc576e9afe69a9ad2d13",
    "transactionHash": "0xbe378f06008e44728c8cee3e695ac038ef2dcb9ee97de12eccf3c93540558cb9",
    "logs": [],
    "blockNumber": 11772989,
    "cumulativeGasUsed": "13589863",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "d27bf7c539ef626aa03359338b9ea5ba",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"EmergencyWithdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Invest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_oldAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_newAdmin\",\"type\":\"address\"}],\"name\":\"SetAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"SetCommunityWallet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"SetDepositFeePerc\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"SetStrategistWallet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"SetTreasuryWallet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"name\":\"SetWhitelist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"SetYieldFeePerc\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Yield\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"YieldFee\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CAKE\",\"outputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MasterChef\",\"outputs\":[{\"internalType\":\"contract IMasterChef\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PckRouter\",\"outputs\":[{\"internalType\":\"contract IUniRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WBNB\",\"outputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"communityWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllPoolInBNB\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_valueInBNB\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllPoolInUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"inUSD\",\"type\":\"bool\"}],\"name\":\"getPricePerFullShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_communityWallet\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_strategist\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"invest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lpToken\",\"outputs\":[{\"internalType\":\"contract IUniPair\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reInvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAdmin\",\"type\":\"address\"}],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"setCommunityWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_depositFeePerc\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_yieldFeePerc\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isFeeEnabled\",\"type\":\"bool\"}],\"name\":\"setFeeStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"setStrategistWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"setTreasuryWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_value\",\"type\":\"bool\"}],\"name\":\"setWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"strategist\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasuryWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_shares\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"yield\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"yieldFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"deposit(uint256)\":{\"params\":{\"_amount\":\"amount of lptokens to deposit\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setFee(uint256,uint256)\":{\"params\":{\"_depositFeePerc\":\"deposit fee percentage. 1000 for 10%\",\"_yieldFeePerc\":\"deposit fee percentage. 2000 for 20%\"}},\"setFeeStatus(bool)\":{\"details\":\"Function to enable/disable deposit fee \"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(uint256)\":{\"params\":{\"_shares\":\"amount of shares to burn\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"emergencyWithdraw()\":{\"notice\":\"Withdraws funds staked in mirror to this vault and pauses deposit, yield, invest functions\"},\"reInvest()\":{\"notice\":\"Unpauses deposit, yield, invest functions, and invests funds.\"},\"setFee(uint256,uint256)\":{\"notice\":\"Function to set deposit and yield fee\"},\"transferFees()\":{\"notice\":\"transfers out fees from vault\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BSCL1/vault.sol\":\"BscVault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal initializer {\\n        __Context_init_unchained();\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal initializer {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x35b09b69aca3bc2633da8f47382a81ecf367efe57167a2114f60f9ec81988afa\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        require(_initializing || !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x8b2abd85d0ece7e866e100e9d47ca9cbec93c87cf71a8d267b2b93eb81f7d5e9\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    function __Pausable_init() internal initializer {\\n        __Context_init_unchained();\\n        __Pausable_init_unchained();\\n    }\\n\\n    function __Pausable_init_unchained() internal initializer {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x742c0fbab73bf595ca40025f6e81cb48dbd5e133950717f7befd062a925c0148\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuardUpgradeable is Initializable {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    function __ReentrancyGuard_init() internal initializer {\\n        __ReentrancyGuard_init_unchained();\\n    }\\n\\n    function __ReentrancyGuard_init_unchained() internal initializer {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0x89fa60d14355f7ae06af11e28fce2bb90c5c6186645d681a30e1b36234a4c210\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20Upgradeable.sol\\\";\\nimport \\\"./extensions/IERC20MetadataUpgradeable.sol\\\";\\nimport \\\"../../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20Upgradeable, IERC20MetadataUpgradeable {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    function __ERC20_init(string memory name_, string memory symbol_) internal initializer {\\n        __Context_init_unchained();\\n        __ERC20_init_unchained(name_, symbol_);\\n    }\\n\\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal initializer {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `recipient` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` and `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``sender``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n\\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\\n        require(currentAllowance >= amount, \\\"ERC20: transfer amount exceeds allowance\\\");\\n        unchecked {\\n            _approve(sender, _msgSender(), currentAllowance - amount);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) internal virtual {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(sender, recipient, amount);\\n\\n        uint256 senderBalance = _balances[sender];\\n        require(senderBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[sender] = senderBalance - amount;\\n        }\\n        _balances[recipient] += amount;\\n\\n        emit Transfer(sender, recipient, amount);\\n\\n        _afterTokenTransfer(sender, recipient, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n        }\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n    uint256[45] private __gap;\\n}\\n\",\"keccak256\":\"0x891fbf39ac5b9524f417db912d33684f239195a0fc5c11db439659676e51aab6\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20Upgradeable {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xf449ca0a763d4b1b4462cf8706857074492f324020a2b9d099181b5383055ad3\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20MetadataUpgradeable is IERC20Upgradeable {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x6795c369a4eefa78468e38966f7851fbc2dda5e5b9ccd3fa2b45970e2e4d3abd\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20Upgradeable.sol\\\";\\nimport \\\"../../../utils/AddressUpgradeable.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20Upgradeable {\\n    using AddressUpgradeable for address;\\n\\n    function safeTransfer(\\n        IERC20Upgradeable token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20Upgradeable token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20Upgradeable token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20Upgradeable token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xc7d7fe7d5ed5068742927e37b400591153dbe8526cd942cfcf5dbb971ba5e8e2\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary AddressUpgradeable {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x946f08c0a132c5877d458d7af7956da60607f20a5c03dd75760708c848aae6b7\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal initializer {\\n        __Context_init_unchained();\\n    }\\n\\n    function __Context_init_unchained() internal initializer {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x062b5a0f7cc6b0528fa350033759f3a15ba42afb57423d7c593753860f2c82e0\",\"license\":\"MIT\"},\"contracts/BSCL1/vault.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\npragma solidity  0.8.7;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/token/ERC20/utils/SafeERC20Upgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\\\";\\n\\ninterface IUniRouter {\\n    function swapExactTokensForTokens(\\n        uint amountIn,\\n        uint amountOutMin,\\n        address[] calldata path,\\n        address to,\\n        uint deadline\\n    ) external returns (uint[] memory amounts);\\n\\n    function addLiquidity(\\n        address tokenA,\\n        address tokenB,\\n        uint amountADesired,\\n        uint amountBDesired,\\n        uint amountAMin,\\n        uint amountBMin,\\n        address to,\\n        uint deadline\\n    ) external returns (uint amountA, uint amountB, uint liquidity) ;\\n\\n    function getAmountsOut(uint amountIn, address[] memory path) external view returns (uint[] memory amounts);\\n\\n}\\n\\ninterface IUniPair is IERC20Upgradeable{\\n    function getReserves() external view returns (uint, uint);\\n    function token0() external view returns (address);\\n    function token1() external view returns (address);\\n}\\n\\ninterface IMasterChef {\\n    function pendingCake(uint pid, address user) external view returns (uint);\\n    function poolInfo(uint pid) external view returns(address, uint, uint, uint);\\n    function userInfo(uint pid, address user) external view returns(uint, uint);\\n\\n    function deposit(uint pid, uint amount) external;\\n    function withdraw(uint pid, uint amount) external;\\n}\\n\\ninterface IChainlink {\\n    function latestAnswer() external view returns (int256);\\n}\\n\\ncontract BscVault is Initializable, ERC20Upgradeable, OwnableUpgradeable, PausableUpgradeable, ReentrancyGuardUpgradeable{\\n    using SafeERC20Upgradeable for IERC20Upgradeable;\\n\\n    using SafeERC20Upgradeable for IUniPair;\\n\\n    IERC20Upgradeable public constant CAKE  = IERC20Upgradeable(0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82);\\n    IERC20Upgradeable public constant WBNB = IERC20Upgradeable(0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c);\\n    IERC20Upgradeable public token0;\\n    IERC20Upgradeable public token1;\\n    IUniPair public lpToken;\\n\\n    IUniRouter public constant PckRouter = IUniRouter(0x10ED43C718714eb63d5aA57B78B54704E256024E);\\n    IMasterChef public constant MasterChef = IMasterChef(0x73feaa1eE314F8c655E354234017bE2193C9E24E);\\n\\n    uint private _fees;\\n    uint private constant DENOMINATOR = 10000;\\n    uint public yieldFee;\\n    uint public depositFee;\\n\\n    address public treasuryWallet;\\n    address public communityWallet;\\n    address public strategist;\\n    address public admin;\\n    address private mAsset;\\n\\n    mapping(address => bool) public isWhitelisted;\\n    mapping(address => uint) private depositedBlock;\\n\\n    uint pid;\\n    bool feeOn;\\n\\n    event Deposit(address _user, uint _amount, uint _shares);\\n    event EmergencyWithdraw(uint _amount);\\n    event Invest(uint _amount);\\n    event SetAdmin(address _oldAdmin, address _newAdmin);\\n    event SetDepositFeePerc(uint _fee);\\n    event SetYieldFeePerc(uint _fee);\\n    event SetCommunityWallet(address _wallet);\\n    event SetStrategistWallet(address _wallet);\\n    event SetTreasuryWallet(address _wallet);\\n    event SetWhitelist(address, bool);\\n    event Withdraw(address _user, uint _amount, uint _shares);\\n    event YieldFee(uint _amount);\\n    event Yield(uint _amount);\\n\\n    modifier onlyOwnerOrAdmin {\\n        require(msg.sender == owner() || msg.sender == admin, \\\"Only owner or admin\\\");\\n        _;\\n    }\\n\\n\\n    function initialize(string memory _name, string memory _symbol, \\n        uint _pid,\\n        address _treasury, address _communityWallet, address _strategist, address _admin\\n    ) external initializer {\\n\\n        __ERC20_init(_name, _symbol);\\n        __Ownable_init();\\n\\n        feeOn = true;\\n        yieldFee = 2000; //20%\\n        depositFee = 1000; //10%\\n        pid = _pid;\\n\\n        (address _lpToken,,,) = MasterChef.poolInfo(_pid);\\n\\n        lpToken = IUniPair(_lpToken);\\n        token0 = IERC20Upgradeable(lpToken.token0());\\n        token1 = IERC20Upgradeable(lpToken.token1());\\n        \\n        treasuryWallet = _treasury;\\n        communityWallet = _communityWallet;\\n        strategist = _strategist;\\n        admin = _admin;\\n        \\n        lpToken.safeApprove(address(MasterChef), type(uint).max);\\n        CAKE.safeApprove(address(PckRouter), type(uint).max);\\n        token0.approve(address(PckRouter), type(uint).max);\\n        token1.approve(address(PckRouter), type(uint).max);\\n    \\n    }\\n    \\n    /**\\n     *@param _amount amount of lptokens to deposit\\n    */\\n    function deposit(uint _amount) external nonReentrant whenNotPaused{\\n        require(_amount > 0, \\\"Invalid amount\\\");\\n\\n        uint _pool = getAllPool();\\n        lpToken.safeTransferFrom(msg.sender, address(this), _amount);\\n\\n        if(feeOn == true && isWhitelisted[msg.sender] == false) {\\n            uint fees = _amount * depositFee / DENOMINATOR;\\n            _amount = _amount - fees;\\n\\n            _fees += fees;\\n        }\\n\\n        depositedBlock[msg.sender] = block.number;\\n\\n        uint _totalSupply = totalSupply();\\n        uint _shares = _totalSupply == 0 ? _amount : _amount * _totalSupply / _pool;\\n\\n        _mint(msg.sender, _shares);\\n        emit Deposit(msg.sender, _amount, _shares);\\n    }\\n\\n    /**\\n     *@param _shares amount of shares to burn\\n    */\\n    function withdraw(uint _shares) external nonReentrant{\\n        require(_shares > 0, \\\"Invalid Amount\\\");\\n        require(balanceOf(msg.sender) >= _shares, \\\"Not enough balance\\\");\\n        require(depositedBlock[msg.sender] != block.number, \\\"Withdraw within same block\\\");\\n\\n\\n        uint _amountToWithdraw = getAllPool() * _shares / totalSupply(); \\n\\n        uint lpTokenAvailable = lpToken.balanceOf(address(this)) - _fees;\\n        if(lpTokenAvailable < _amountToWithdraw) {\\n            MasterChef.withdraw(pid, _amountToWithdraw - lpTokenAvailable );\\n        }\\n\\n        _burn(msg.sender, _shares);\\n\\n        lpToken.safeTransfer(msg.sender, _amountToWithdraw);\\n\\n        emit Withdraw(msg.sender, _amountToWithdraw, _shares);\\n        \\n    }\\n\\n    function invest() external onlyOwnerOrAdmin whenNotPaused{\\n        transferFees();\\n        uint _amt = _invest();\\n\\n        emit Invest(_amt);\\n    }\\n\\n    function _invest() private returns (uint available){\\n        available = lpToken.balanceOf(address(this)) - _fees;\\n        if(available > 0) {\\n            MasterChef.deposit(pid, available);\\n        }\\n    }\\n\\n    ///@notice Withdraws funds staked in mirror to this vault and pauses deposit, yield, invest functions\\n    function emergencyWithdraw() external onlyOwnerOrAdmin whenNotPaused{ \\n        _pause();\\n\\n        _yield();\\n\\n        (uint stakedTokens,) = MasterChef.userInfo(pid, address(this));\\n\\n        if(stakedTokens > 0 ) {\\n            MasterChef.withdraw(pid, stakedTokens);\\n        }\\n\\n        emit EmergencyWithdraw(stakedTokens);\\n    }\\n\\n    function setWhitelist(address _addr, bool _value) external onlyOwnerOrAdmin {\\n        isWhitelisted[_addr] = _value;\\n        emit SetWhitelist(_addr, _value);\\n    }\\n    \\n    ///@dev Function to enable/disable deposit fee \\n    function setFeeStatus(bool _isFeeEnabled) external onlyOwner {\\n        feeOn = _isFeeEnabled;\\n    }\\n\\n    ///@notice Unpauses deposit, yield, invest functions, and invests funds.\\n    function reInvest() external onlyOwnerOrAdmin whenPaused {\\n        _invest();\\n        _unpause();\\n    }\\n\\n    function setAdmin(address _newAdmin) external onlyOwner{\\n        address oldAdmin = admin;\\n        admin = _newAdmin;\\n\\n        emit SetAdmin(oldAdmin, _newAdmin);\\n    }\\n\\n    ///@notice Function to set deposit and yield fee\\n    ///@param _depositFeePerc deposit fee percentage. 1000 for 10%\\n    ///@param _yieldFeePerc deposit fee percentage. 2000 for 20%\\n    function setFee(uint _depositFeePerc, uint _yieldFeePerc) external onlyOwner{\\n        depositFee = _depositFeePerc;\\n        yieldFee = _yieldFeePerc;\\n\\n        emit SetDepositFeePerc(_depositFeePerc);\\n        emit SetYieldFeePerc(_yieldFeePerc);\\n    }\\n\\n    function setTreasuryWallet(address _wallet) external onlyOwner {\\n        treasuryWallet = _wallet;\\n        emit SetTreasuryWallet(_wallet);\\n    }\\n\\n    function setCommunityWallet(address _wallet) external onlyOwner {\\n        communityWallet = _wallet;\\n        emit SetCommunityWallet(_wallet);\\n    }\\n\\n    function setStrategistWallet(address _wallet) external onlyOwner {\\n        strategist = _wallet;\\n        emit SetStrategistWallet(_wallet);\\n    }\\n\\n    function yield() external onlyOwnerOrAdmin whenNotPaused {\\n        _yield();\\n    }\\n\\n    function _yield() private {\\n        uint cakeBalance = CAKE.balanceOf(address(this));\\n        \\n        if(cakeBalance > 0) {\\n            uint _token0Amount = token0 == CAKE ? cakeBalance /2 : _swap(address(CAKE), address(token0), cakeBalance/2)[1];\\n            uint _token1Amount = token1 == CAKE ? cakeBalance /2 :  _swap(address(CAKE), address(token1), cakeBalance/2)[1];\\n\\n            (,,uint lpTokens) = PckRouter.addLiquidity(address(token0), address(token1), _token0Amount, _token1Amount, 0, 0, address(this), block.timestamp);\\n\\n            uint fee = lpTokens * yieldFee / DENOMINATOR; //yield fee\\n            _fees += fee;\\n\\n            _invest();\\n\\n            address[] memory path = new address[](2);\\n            path[0] = address(CAKE);\\n            path[1] = address(WBNB);\\n\\n            uint priceInBNB = PckRouter.getAmountsOut(1e18, path)[1];\\n\\n            emit Yield(cakeBalance * priceInBNB);\\n            emit YieldFee(fee * priceInBNB);\\n        }\\n    }\\n\\n    function _swap(address _tokenA, address _tokenB, uint _amt) private returns (uint[] memory amounts){\\n        address[] memory path = new address[](2);\\n\\n        path[0] = address(_tokenA);\\n        path[1] = address(_tokenB);\\n\\n        amounts = PckRouter.swapExactTokensForTokens(_amt, 0, path, address(this), block.timestamp);\\n    }\\n\\n    ///@notice transfers out fees from vault\\n    function transferFees() public  onlyOwnerOrAdmin {\\n        if(_fees > 0) {\\n            uint feeSplit = _fees * 2 / 5;\\n            lpToken.safeTransfer(treasuryWallet, feeSplit);\\n            lpToken.safeTransfer(communityWallet, feeSplit);\\n            lpToken.safeTransfer(strategist, _fees - (feeSplit + feeSplit));\\n\\n            _fees = 0;\\n        }\\n    }\\n\\n    function getAllPool() public view returns (uint ) {\\n        (uint stakedTokens,) = MasterChef.userInfo(pid, address(this));\\n        return lpToken.balanceOf(address(this)) + stakedTokens - _fees;\\n    }\\n\\n    function getAllPoolInBNB() public view returns (uint _valueInBNB) {\\n        uint _pool = getAllPool();\\n        uint _totalSupply = lpToken.totalSupply();\\n\\n        (uint _reserve0, uint _reserve1) = lpToken.getReserves();\\n        \\n        uint _total0 = _pool * _reserve0 / _totalSupply;\\n        uint _total1 = _pool * _reserve1 / _totalSupply;\\n        \\n        _valueInBNB = (_total0 * _getPriceInBNB(address(token0))) + \\n        (_total1 * _getPriceInBNB(address(token1))) ;\\n\\n        _valueInBNB = _valueInBNB / 1e18;\\n\\n    }\\n\\n    function _getPriceInBNB(address _token) private view returns (uint) {\\n        if(_token == address(WBNB)) {\\n            return 1e18;\\n        } else {\\n            address[] memory path = new address[](2);\\n\\n            path[0] = _token;\\n            path[1] = address(WBNB);\\n            return PckRouter.getAmountsOut(1e18, path)[1];\\n        }\\n    }\\n\\n    function getAllPoolInUSD() public view returns (uint) {\\n        uint BNBPriceInUSD = uint(IChainlink(0x0567F2323251f0Aab15c8dFb1967E4e8A7D42aeE).latestAnswer()); // 8 decimals\\n        return getAllPoolInBNB() * BNBPriceInUSD / 1e8;\\n    }\\n\\n    function getPricePerFullShare(bool inUSD) public view returns (uint) {\\n        uint _totalSupply = totalSupply();\\n        if (_totalSupply == 0) return 0;\\n        return inUSD == true ?\\n            getAllPoolInUSD() * 1e18 / _totalSupply :\\n            getAllPool() * 1e18 / _totalSupply;\\n    }\\n\\n}\\n\",\"keccak256\":\"0x23b28c900b8791e688641d97657e1b39e603f02a39de80f2b530efa2b77983bd\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50614247806100206000396000f3fe608060405234801561001057600080fd5b50600436106103205760003560e01c8063715018a6116101a7578063bd244af4116100ee578063dea7f11211610097578063ec09742d11610071578063ec09742d14610691578063f2fde38b146106a4578063f851a440146106b757600080fd5b8063dea7f1121461065b578063e8b5e51f1461066e578063e9ea46c71461067657600080fd5b8063d21220a7116100c8578063d21220a714610607578063db2e21bc1461061a578063dd62ed3e1461062257600080fd5b8063bd244af4146105e3578063c2fbe7bc146105eb578063c7574839146105f357600080fd5b806395d89b4111610150578063a8602fea1161012a578063a8602fea146105aa578063a9059cbb146105bd578063b6b55f25146105d057600080fd5b806395d89b4114610587578063a20a4cb41461058f578063a457c2d71461059757600080fd5b80638bffb8d6116101815780638bffb8d6146105485780638da5cb5b1461055b5780638dd950021461056c57600080fd5b8063715018a61461052557806385d6bb811461052d57806388ac86b21461054057600080fd5b80633af32abf1161026b5780635c975abb1161021457806368fe5356116101ee57806368fe5356146104ce578063704b6c02146104e957806370a08231146104fc57600080fd5b80635c975abb146104a65780635fcbd285146104b157806367a52793146104c457600080fd5b806350be99ad1161024557806350be99ad1461047857806352f7c9881461048057806353d6fd591461049357600080fd5b80633af32abf146104255780634626402b146104495780634ca6ef281461045d57600080fd5b806320f14908116102cd5780632e1a7d4d116102a75780632e1a7d4d146103f0578063313ce56714610403578063395093511461041257600080fd5b806320f14908146103c057806323b872dd146103d357806328593984146103e657600080fd5b80630dfe1681116102fe5780630dfe16811461037957806318160ddd146103a45780631fe4a686146103ac57600080fd5b8063034f40831461032557806306fdde0314610341578063095ea7b314610356575b600080fd5b61032e60ff5481565b6040519081526020015b60405180910390f35b6103496106cb565b6040516103389190614035565b610369610364366004613d0a565b61075d565b6040519015158152602001610338565b60fb5461038c906001600160a01b031681565b6040516001600160a01b039091168152602001610338565b60355461032e565b6101035461038c906001600160a01b031681565b61032e6103ce366004613e22565b610773565b6103696103e1366004613c9b565b6107ef565b6103ee6108b3565b005b6103ee6103fe366004613f2f565b610969565b60405160128152602001610338565b610369610420366004613d0a565b610c92565b610369610433366004613c28565b6101066020526000908152604090205460ff1681565b6101015461038c906001600160a01b031681565b61038c730e09fabb73bd3ade0a17ecc321fd13a19e81ce8281565b6103ee610cce565b6103ee61048e366004613f48565b610d97565b6103ee6104a1366004613cdc565b610e67565b60975460ff16610369565b60fd5461038c906001600160a01b031681565b61032e6101005481565b61038c7310ed43c718714eb63d5aa57b78b54704e256024e81565b6103ee6104f7366004613c28565b610f2a565b61032e61050a366004613c28565b6001600160a01b031660009081526033602052604090205490565b6103ee610fdf565b6103ee61053b366004613c28565b611043565b61032e6110f3565b6103ee610556366004613e22565b6112be565b6065546001600160a01b031661038c565b61038c73bb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c81565b61034961132c565b61032e61133b565b6103696105a5366004613d0a565b61146b565b6103ee6105b8366004613c28565b61151c565b6103696105cb366004613d0a565b6115c5565b6103ee6105de366004613f2f565b6115d2565b61032e6117e9565b6103ee611895565b6101025461038c906001600160a01b031681565b60fc5461038c906001600160a01b031681565b6103ee6119a2565b61032e610630366004613c62565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6103ee610669366004613e75565b611bb2565b6103ee612077565b61038c7373feaa1ee314f8c655e354234017be2193c9e24e81565b6103ee61069f366004613c28565b612168565b6103ee6106b2366004613c28565b612211565b6101045461038c906001600160a01b031681565b6060603680546106da90614171565b80601f016020809104026020016040519081016040528092919081815260200182805461070690614171565b80156107535780601f1061072857610100808354040283529160200191610753565b820191906000526020600020905b81548152906001019060200180831161073657829003601f168201915b5050505050905090565b600061076a3384846122f3565b50600192915050565b60008061077f60355490565b90508061078f5750600092915050565b6001831515146107c357806107a261133b565b6107b490670de0b6b3a764000061410f565b6107be91906140ed565b6107e8565b806107cc6117e9565b6107de90670de0b6b3a764000061410f565b6107e891906140ed565b9392505050565b60006107fc84848461244c565b6001600160a01b03841660009081526034602090815260408083203384529091529020548281101561089b5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206160448201527f6c6c6f77616e636500000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6108a885338584036122f3565b506001949350505050565b6065546001600160a01b03163314806108d75750610104546001600160a01b031633145b6109195760405162461bcd60e51b815260206004820152601360248201527227b7363c9037bbb732b91037b91030b236b4b760691b6044820152606401610892565b60975460ff161561095f5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610892565b610967612665565b565b600260c95414156109bc5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610892565b600260c95580610a0e5760405162461bcd60e51b815260206004820152600e60248201527f496e76616c696420416d6f756e740000000000000000000000000000000000006044820152606401610892565b33600090815260336020526040902054811115610a6d5760405162461bcd60e51b815260206004820152601260248201527f4e6f7420656e6f7567682062616c616e636500000000000000000000000000006044820152606401610892565b3360009081526101076020526040902054431415610acd5760405162461bcd60e51b815260206004820152601a60248201527f57697468647261772077697468696e2073616d6520626c6f636b0000000000006044820152606401610892565b6000610ad860355490565b82610ae161133b565b610aeb919061410f565b610af591906140ed565b60fe5460fd546040516370a0823160e01b81523060048201529293506000926001600160a01b03909116906370a082319060240160206040518083038186803b158015610b4157600080fd5b505afa158015610b55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b799190613e5c565b610b83919061412e565b905081811015610c2657610108547373feaa1ee314f8c655e354234017be2193c9e24e9063441a3e7090610bb7848661412e565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815260048101929092526024820152604401600060405180830381600087803b158015610c0d57600080fd5b505af1158015610c21573d6000803e3d6000fd5b505050505b610c303384612b08565b60fd54610c47906001600160a01b03163384612c8a565b60408051338152602081018490529081018490527ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689060600160405180910390a15050600160c95550565b3360008181526034602090815260408083206001600160a01b0387168452909152812054909161076a918590610cc99086906140d5565b6122f3565b6065546001600160a01b0316331480610cf25750610104546001600160a01b031633145b610d345760405162461bcd60e51b815260206004820152601360248201527227b7363c9037bbb732b91037b91030b236b4b760691b6044820152606401610892565b60975460ff16610d865760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f74207061757365640000000000000000000000006044820152606401610892565b610d8e612d33565b50610967612e53565b6065546001600160a01b03163314610df15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610892565b61010082905560ff8190556040518281527f603ccedf3d21d18b0f02ac69dfca121f1b4d6626b8a6840446b5cc81aa2cc1c19060200160405180910390a16040518181527f5cdc47cbc2be1e35e5429dd646b1e2047ab328f4108873ab71318989f7566ceb906020015b60405180910390a15050565b6065546001600160a01b0316331480610e8b5750610104546001600160a01b031633145b610ecd5760405162461bcd60e51b815260206004820152601360248201527227b7363c9037bbb732b91037b91030b236b4b760691b6044820152606401610892565b6001600160a01b03821660008181526101066020908152604091829020805460ff19168515159081179091558251938452908301527ff6019ec0a78d156d249a1ec7579e2321f6ac7521d6e1d2eacf90ba4a184dcceb9101610e5b565b6065546001600160a01b03163314610f845760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610892565b61010480546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527f848ac24ab84501710d6631faab117b66b79aba7ec6f7778cf3bcff428c1a4efc9101610e5b565b6065546001600160a01b031633146110395760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610892565b6109676000612eef565b6065546001600160a01b0316331461109d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610892565b61010280546001600160a01b0319166001600160a01b0383169081179091556040519081527f46d11399b0e4a268da86e8592a33fc6896eb2244f1609819171eff3820fd6e69906020015b60405180910390a150565b6000806110fe61133b565b9050600060fd60009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561115057600080fd5b505afa158015611164573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111889190613e5c565b60fd54604080517f0902f1ac000000000000000000000000000000000000000000000000000000008152815193945060009384936001600160a01b031692630902f1ac9260048082019391829003018186803b1580156111e757600080fd5b505afa1580156111fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061121f9190613f6a565b9092509050600083611231848761410f565b61123b91906140ed565b905060008461124a848861410f565b61125491906140ed565b60fc5490915061126c906001600160a01b0316612f41565b611276908261410f565b60fb5461128b906001600160a01b0316612f41565b611295908461410f565b61129f91906140d5565b96506112b3670de0b6b3a7640000886140ed565b965050505050505090565b6065546001600160a01b031633146113185760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610892565b610109805460ff1916911515919091179055565b6060603780546106da90614171565b610108546040516393f1a40b60e01b8152600481019190915230602482015260009081907373feaa1ee314f8c655e354234017be2193c9e24e906393f1a40b90604401604080518083038186803b15801561139557600080fd5b505afa1580156113a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113cd9190613f6a565b5060fe5460fd546040516370a0823160e01b8152306004820152929350909183916001600160a01b0316906370a082319060240160206040518083038186803b15801561141957600080fd5b505afa15801561142d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114519190613e5c565b61145b91906140d5565b611465919061412e565b91505090565b3360009081526034602090815260408083206001600160a01b0386168452909152812054828110156115055760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152608401610892565b61151233858584036122f3565b5060019392505050565b6065546001600160a01b031633146115765760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610892565b61010180546001600160a01b0319166001600160a01b0383169081179091556040519081527f60edc991b058a7e279075cf86f19a6b478334efec47e089d09890b139c782327906020016110e8565b600061076a33848461244c565b600260c95414156116255760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610892565b600260c95560975460ff16156116705760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610892565b600081116116c05760405162461bcd60e51b815260206004820152600e60248201527f496e76616c696420616d6f756e740000000000000000000000000000000000006044820152606401610892565b60006116ca61133b565b60fd549091506116e5906001600160a01b03163330856130c3565b6101095460ff161515600114801561170e5750336000908152610106602052604090205460ff16155b156117585760006127106101005484611727919061410f565b61173191906140ed565b905061173d818461412e565b92508060fe600082825461175191906140d5565b9091555050505b3360009081526101076020526040812043905560355490811561178f5782611780838661410f565b61178a91906140ed565b611791565b835b905061179d3382613114565b60408051338152602081018690529081018290527f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159060600160405180910390a15050600160c9555050565b600080730567f2323251f0aab15c8dfb1967e4e8a7d42aee6001600160a01b03166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561183957600080fd5b505afa15801561184d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118719190613e5c565b90506305f5e100816118816110f3565b61188b919061410f565b61146591906140ed565b6065546001600160a01b03163314806118b95750610104546001600160a01b031633145b6118fb5760405162461bcd60e51b815260206004820152601360248201527227b7363c9037bbb732b91037b91030b236b4b760691b6044820152606401610892565b60fe5415610967576000600560fe546002611916919061410f565b61192091906140ed565b6101015460fd54919250611941916001600160a01b03908116911683612c8a565b6101025460fd5461195f916001600160a01b03918216911683612c8a565b6101035461199a906001600160a01b031661197a83806140d5565b60fe54611987919061412e565b60fd546001600160a01b03169190612c8a565b50600060fe55565b6065546001600160a01b03163314806119c65750610104546001600160a01b031633145b611a085760405162461bcd60e51b815260206004820152601360248201527227b7363c9037bbb732b91037b91030b236b4b760691b6044820152606401610892565b60975460ff1615611a4e5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610892565b611a566131f3565b611a5e612665565b610108546040516393f1a40b60e01b815260048101919091523060248201526000907373feaa1ee314f8c655e354234017be2193c9e24e906393f1a40b90604401604080518083038186803b158015611ab657600080fd5b505afa158015611aca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aee9190613f6a565b5090508015611b8257610108546040517f441a3e700000000000000000000000000000000000000000000000000000000081526004810191909152602481018290527373feaa1ee314f8c655e354234017be2193c9e24e9063441a3e7090604401600060405180830381600087803b158015611b6957600080fd5b505af1158015611b7d573d6000803e3d6000fd5b505050505b6040518181527f99d7f8b71cfb9126984f7a5eed3a40e64a8959e9b0e442221546fb04ec6a489c906020016110e8565b600054610100900460ff1680611bcb575060005460ff16155b611c2e5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610892565b600054610100900460ff16158015611c50576000805461ffff19166101011790555b611c5a888861326e565b611c62613334565b610109805460ff191660011790556107d060ff556103e8610100556101088690556040517f1526fe27000000000000000000000000000000000000000000000000000000008152600481018790526000907373feaa1ee314f8c655e354234017be2193c9e24e90631526fe279060240160806040518083038186803b158015611cea57600080fd5b505afa158015611cfe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d229190613d36565b505060fd80546001600160a01b0319166001600160a01b038416908117909155604080517f0dfe168100000000000000000000000000000000000000000000000000000000815290519394509092630dfe168192506004808301926020929190829003018186803b158015611d9657600080fd5b505afa158015611daa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dce9190613c45565b60fb80546001600160a01b0319166001600160a01b0392831617905560fd54604080517fd21220a70000000000000000000000000000000000000000000000000000000081529051919092169163d21220a7916004808301926020929190829003018186803b158015611e4057600080fd5b505afa158015611e54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e789190613c45565b60fc80546001600160a01b03199081166001600160a01b0393841617909155610101805482168984161790556101028054821688841617905561010380548216878416179055610104805490911685831617905560fd54611ef191167373feaa1ee314f8c655e354234017be2193c9e24e6000196133f6565b611f26730e09fabb73bd3ade0a17ecc321fd13a19e81ce827310ed43c718714eb63d5aa57b78b54704e256024e6000196133f6565b60fb5460405163095ea7b360e01b81527310ed43c718714eb63d5aa57b78b54704e256024e600482015260001960248201526001600160a01b039091169063095ea7b390604401602060405180830381600087803b158015611f8757600080fd5b505af1158015611f9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fbf9190613e3f565b5060fc5460405163095ea7b360e01b81527310ed43c718714eb63d5aa57b78b54704e256024e600482015260001960248201526001600160a01b039091169063095ea7b390604401602060405180830381600087803b15801561202157600080fd5b505af1158015612035573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120599190613e3f565b5050801561206d576000805461ff00191690555b5050505050505050565b6065546001600160a01b031633148061209b5750610104546001600160a01b031633145b6120dd5760405162461bcd60e51b815260206004820152601360248201527227b7363c9037bbb732b91037b91030b236b4b760691b6044820152606401610892565b60975460ff16156121235760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610892565b61212b611895565b6000612135612d33565b90507fa09b7ae452b7bffb9e204c3a016e80caeecf46f554d112644f36fa114dac6ffa816040516110e891815260200190565b6065546001600160a01b031633146121c25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610892565b61010380546001600160a01b0319166001600160a01b0383169081179091556040519081527fe69c832dd268bca67b9623f0d9fe5b1adbd99b1e29a7492a1817b2fea90d5b64906020016110e8565b6065546001600160a01b0316331461226b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610892565b6001600160a01b0381166122e75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610892565b6122f081612eef565b50565b6001600160a01b03831661236e5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610892565b6001600160a01b0382166123ea5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610892565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166124c85760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610892565b6001600160a01b0382166125445760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610892565b6001600160a01b038316600090815260336020526040902054818110156125d35760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610892565b6001600160a01b0380851660009081526033602052604080822085850390559185168152908120805484929061260a9084906140d5565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161265691815260200190565b60405180910390a35b50505050565b6040516370a0823160e01b8152306004820152600090730e09fabb73bd3ade0a17ecc321fd13a19e81ce82906370a082319060240160206040518083038186803b1580156126b257600080fd5b505afa1580156126c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126ea9190613e5c565b905080156122f05760fb546000906001600160a01b0316730e09fabb73bd3ade0a17ecc321fd13a19e81ce82146127705760fb5461275190730e09fabb73bd3ade0a17ecc321fd13a19e81ce82906001600160a01b031661274c6002866140ed565b61353a565b600181518110612763576127636141c2565b602002602001015161277b565b61277b6002836140ed565b60fc549091506000906001600160a01b0316730e09fabb73bd3ade0a17ecc321fd13a19e81ce82146127f75760fc546127d890730e09fabb73bd3ade0a17ecc321fd13a19e81ce82906001600160a01b031661274c6002876140ed565b6001815181106127ea576127ea6141c2565b6020026020010151612802565b6128026002846140ed565b60fb5460fc546040517fe8e337000000000000000000000000000000000000000000000000000000000081526001600160a01b03928316600482015291166024820152604481018490526064810182905260006084820181905260a482018190523060c48301524260e48301529192507310ed43c718714eb63d5aa57b78b54704e256024e9063e8e337009061010401606060405180830381600087803b1580156128ac57600080fd5b505af11580156128c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128e49190613f8e565b92505050600061271060ff54836128fb919061410f565b61290591906140ed565b90508060fe600082825461291991906140d5565b909155506129279050612d33565b50604080516002808252606082018352600092602083019080368337019050509050730e09fabb73bd3ade0a17ecc321fd13a19e81ce8281600081518110612971576129716141c2565b60200260200101906001600160a01b031690816001600160a01b03168152505073bb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c816001815181106129b9576129b96141c2565b6001600160a01b039092166020928302919091019091015260405163d06ca61f60e01b81526000907310ed43c718714eb63d5aa57b78b54704e256024e9063d06ca61f90612a1590670de0b6b3a764000090869060040161401c565b60006040518083038186803b158015612a2d57600080fd5b505afa158015612a41573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052612a699190810190613d75565b600181518110612a7b57612a7b6141c2565b602002602001015190507f913f67bfd2c6ac4a84007665147ed6861715996d03ed38d610c52e28c08838038188612ab2919061410f565b60405190815260200160405180910390a17f6d415483528749d9b4bfa85837aeca6271d845839c39bfa4614240e15dabeb1e612aee828561410f565b60405190815260200160405180910390a150505050505050565b6001600160a01b038216612b845760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152608401610892565b6001600160a01b03821660009081526033602052604090205481811015612c135760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f63650000000000000000000000000000000000000000000000000000000000006064820152608401610892565b6001600160a01b0383166000908152603360205260408120838303905560358054849290612c4290849061412e565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161243f565b505050565b6040516001600160a01b038316602482015260448101829052612c859084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152613677565b60fe5460fd546040516370a0823160e01b8152306004820152600092916001600160a01b0316906370a082319060240160206040518083038186803b158015612d7b57600080fd5b505afa158015612d8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612db39190613e5c565b612dbd919061412e565b90508015612e5057610108546040517fe2bbb1580000000000000000000000000000000000000000000000000000000081526004810191909152602481018290527373feaa1ee314f8c655e354234017be2193c9e24e9063e2bbb15890604401600060405180830381600087803b158015612e3757600080fd5b505af1158015612e4b573d6000803e3d6000fd5b505050505b90565b60975460ff16612ea55760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f74207061757365640000000000000000000000006044820152606401610892565b6097805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006001600160a01b03821673bb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c1415612f775750670de0b6b3a7640000919050565b6040805160028082526060820183526000926020830190803683370190505090508281600081518110612fac57612fac6141c2565b60200260200101906001600160a01b031690816001600160a01b03168152505073bb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c81600181518110612ff457612ff46141c2565b6001600160a01b039092166020928302919091019091015260405163d06ca61f60e01b81527310ed43c718714eb63d5aa57b78b54704e256024e9063d06ca61f9061304d90670de0b6b3a764000090859060040161401c565b60006040518083038186803b15801561306557600080fd5b505afa158015613079573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526130a19190810190613d75565b6001815181106130b3576130b36141c2565b6020026020010151915050919050565b6040516001600160a01b038085166024830152831660448201526064810182905261265f9085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401612ccf565b6001600160a01b03821661316a5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610892565b806035600082825461317c91906140d5565b90915550506001600160a01b038216600090815260336020526040812080548392906131a99084906140d5565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b60975460ff16156132395760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610892565b6097805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258612ed23390565b600054610100900460ff1680613287575060005460ff16155b6132ea5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610892565b600054610100900460ff1615801561330c576000805461ffff19166101011790555b61331461375c565b61331e838361380d565b8015612c85576000805461ff0019169055505050565b600054610100900460ff168061334d575060005460ff16155b6133b05760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610892565b600054610100900460ff161580156133d2576000805461ffff19166101011790555b6133da61375c565b6133e26138e9565b80156122f0576000805461ff001916905550565b80158061349857506040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b15801561345e57600080fd5b505afa158015613472573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134969190613e5c565b155b61350a5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e6365000000000000000000006064820152608401610892565b6040516001600160a01b038316602482015260448101829052612c8590849063095ea7b360e01b90606401612ccf565b604080516002808252606080830184529260009291906020830190803683370190505090508481600081518110613573576135736141c2565b60200260200101906001600160a01b031690816001600160a01b03168152505083816001815181106135a7576135a76141c2565b6001600160a01b03909216602092830291909101909101526040517f38ed17390000000000000000000000000000000000000000000000000000000081527310ed43c718714eb63d5aa57b78b54704e256024e906338ed173990613618908690600090869030904290600401614068565b600060405180830381600087803b15801561363257600080fd5b505af1158015613646573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261366e9190810190613d75565b95945050505050565b60006136cc826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166139909092919063ffffffff16565b805190915015612c8557808060200190518101906136ea9190613e3f565b612c855760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610892565b600054610100900460ff1680613775575060005460ff16155b6137d85760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610892565b600054610100900460ff161580156133e2576000805461ffff191661010117905580156122f0576000805461ff001916905550565b600054610100900460ff1680613826575060005460ff16155b6138895760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610892565b600054610100900460ff161580156138ab576000805461ffff19166101011790555b82516138be906036906020860190613b1f565b5081516138d2906037906020850190613b1f565b508015612c85576000805461ff0019169055505050565b600054610100900460ff1680613902575060005460ff16155b6139655760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610892565b600054610100900460ff16158015613987576000805461ffff19166101011790555b6133e233612eef565b606061399f84846000856139a7565b949350505050565b606082471015613a1f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610892565b843b613a6d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610892565b600080866001600160a01b03168587604051613a899190614000565b60006040518083038185875af1925050503d8060008114613ac6576040519150601f19603f3d011682016040523d82523d6000602084013e613acb565b606091505b5091509150613adb828286613ae6565b979650505050505050565b60608315613af55750816107e8565b825115613b055782518084602001fd5b8160405162461bcd60e51b81526004016108929190614035565b828054613b2b90614171565b90600052602060002090601f016020900481019282613b4d5760008555613b93565b82601f10613b6657805160ff1916838001178555613b93565b82800160010185558215613b93579182015b82811115613b93578251825591602001919060010190613b78565b50613b9f929150613ba3565b5090565b5b80821115613b9f5760008155600101613ba4565b600082601f830112613bc957600080fd5b813567ffffffffffffffff811115613be357613be36141d8565b613bf6601f8201601f19166020016140a4565b818152846020838601011115613c0b57600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215613c3a57600080fd5b81356107e8816141ee565b600060208284031215613c5757600080fd5b81516107e8816141ee565b60008060408385031215613c7557600080fd5b8235613c80816141ee565b91506020830135613c90816141ee565b809150509250929050565b600080600060608486031215613cb057600080fd5b8335613cbb816141ee565b92506020840135613ccb816141ee565b929592945050506040919091013590565b60008060408385031215613cef57600080fd5b8235613cfa816141ee565b91506020830135613c9081614203565b60008060408385031215613d1d57600080fd5b8235613d28816141ee565b946020939093013593505050565b60008060008060808587031215613d4c57600080fd5b8451613d57816141ee565b60208601516040870151606090970151919890975090945092505050565b60006020808385031215613d8857600080fd5b825167ffffffffffffffff80821115613da057600080fd5b818501915085601f830112613db457600080fd5b815181811115613dc657613dc66141d8565b8060051b9150613dd78483016140a4565b8181528481019084860184860187018a1015613df257600080fd5b600095505b83861015613e15578051835260019590950194918601918601613df7565b5098975050505050505050565b600060208284031215613e3457600080fd5b81356107e881614203565b600060208284031215613e5157600080fd5b81516107e881614203565b600060208284031215613e6e57600080fd5b5051919050565b600080600080600080600060e0888a031215613e9057600080fd5b873567ffffffffffffffff80821115613ea857600080fd5b613eb48b838c01613bb8565b985060208a0135915080821115613eca57600080fd5b50613ed78a828b01613bb8565b965050604088013594506060880135613eef816141ee565b93506080880135613eff816141ee565b925060a0880135613f0f816141ee565b915060c0880135613f1f816141ee565b8091505092959891949750929550565b600060208284031215613f4157600080fd5b5035919050565b60008060408385031215613f5b57600080fd5b50508035926020909101359150565b60008060408385031215613f7d57600080fd5b505080516020909101519092909150565b600080600060608486031215613fa357600080fd5b8351925060208401519150604084015190509250925092565b600081518084526020808501945080840160005b83811015613ff55781516001600160a01b031687529582019590820190600101613fd0565b509495945050505050565b60008251614012818460208701614145565b9190910192915050565b82815260406020820152600061399f6040830184613fbc565b6020815260008251806020840152614054816040850160208701614145565b601f01601f19169190910160400192915050565b85815284602082015260a06040820152600061408760a0830186613fbc565b6001600160a01b0394909416606083015250608001529392505050565b604051601f8201601f1916810167ffffffffffffffff811182821017156140cd576140cd6141d8565b604052919050565b600082198211156140e8576140e86141ac565b500190565b60008261410a57634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615614129576141296141ac565b500290565b600082821015614140576141406141ac565b500390565b60005b83811015614160578181015183820152602001614148565b8381111561265f5750506000910152565b600181811c9082168061418557607f821691505b602082108114156141a657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146122f057600080fd5b80151581146122f057600080fdfea264697066735822122048d0cacee402ecebeb9a14f19c66f23f444356db5f541d25eb96bb4aa1b231ed64736f6c63430008070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106103205760003560e01c8063715018a6116101a7578063bd244af4116100ee578063dea7f11211610097578063ec09742d11610071578063ec09742d14610691578063f2fde38b146106a4578063f851a440146106b757600080fd5b8063dea7f1121461065b578063e8b5e51f1461066e578063e9ea46c71461067657600080fd5b8063d21220a7116100c8578063d21220a714610607578063db2e21bc1461061a578063dd62ed3e1461062257600080fd5b8063bd244af4146105e3578063c2fbe7bc146105eb578063c7574839146105f357600080fd5b806395d89b4111610150578063a8602fea1161012a578063a8602fea146105aa578063a9059cbb146105bd578063b6b55f25146105d057600080fd5b806395d89b4114610587578063a20a4cb41461058f578063a457c2d71461059757600080fd5b80638bffb8d6116101815780638bffb8d6146105485780638da5cb5b1461055b5780638dd950021461056c57600080fd5b8063715018a61461052557806385d6bb811461052d57806388ac86b21461054057600080fd5b80633af32abf1161026b5780635c975abb1161021457806368fe5356116101ee57806368fe5356146104ce578063704b6c02146104e957806370a08231146104fc57600080fd5b80635c975abb146104a65780635fcbd285146104b157806367a52793146104c457600080fd5b806350be99ad1161024557806350be99ad1461047857806352f7c9881461048057806353d6fd591461049357600080fd5b80633af32abf146104255780634626402b146104495780634ca6ef281461045d57600080fd5b806320f14908116102cd5780632e1a7d4d116102a75780632e1a7d4d146103f0578063313ce56714610403578063395093511461041257600080fd5b806320f14908146103c057806323b872dd146103d357806328593984146103e657600080fd5b80630dfe1681116102fe5780630dfe16811461037957806318160ddd146103a45780631fe4a686146103ac57600080fd5b8063034f40831461032557806306fdde0314610341578063095ea7b314610356575b600080fd5b61032e60ff5481565b6040519081526020015b60405180910390f35b6103496106cb565b6040516103389190614035565b610369610364366004613d0a565b61075d565b6040519015158152602001610338565b60fb5461038c906001600160a01b031681565b6040516001600160a01b039091168152602001610338565b60355461032e565b6101035461038c906001600160a01b031681565b61032e6103ce366004613e22565b610773565b6103696103e1366004613c9b565b6107ef565b6103ee6108b3565b005b6103ee6103fe366004613f2f565b610969565b60405160128152602001610338565b610369610420366004613d0a565b610c92565b610369610433366004613c28565b6101066020526000908152604090205460ff1681565b6101015461038c906001600160a01b031681565b61038c730e09fabb73bd3ade0a17ecc321fd13a19e81ce8281565b6103ee610cce565b6103ee61048e366004613f48565b610d97565b6103ee6104a1366004613cdc565b610e67565b60975460ff16610369565b60fd5461038c906001600160a01b031681565b61032e6101005481565b61038c7310ed43c718714eb63d5aa57b78b54704e256024e81565b6103ee6104f7366004613c28565b610f2a565b61032e61050a366004613c28565b6001600160a01b031660009081526033602052604090205490565b6103ee610fdf565b6103ee61053b366004613c28565b611043565b61032e6110f3565b6103ee610556366004613e22565b6112be565b6065546001600160a01b031661038c565b61038c73bb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c81565b61034961132c565b61032e61133b565b6103696105a5366004613d0a565b61146b565b6103ee6105b8366004613c28565b61151c565b6103696105cb366004613d0a565b6115c5565b6103ee6105de366004613f2f565b6115d2565b61032e6117e9565b6103ee611895565b6101025461038c906001600160a01b031681565b60fc5461038c906001600160a01b031681565b6103ee6119a2565b61032e610630366004613c62565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b6103ee610669366004613e75565b611bb2565b6103ee612077565b61038c7373feaa1ee314f8c655e354234017be2193c9e24e81565b6103ee61069f366004613c28565b612168565b6103ee6106b2366004613c28565b612211565b6101045461038c906001600160a01b031681565b6060603680546106da90614171565b80601f016020809104026020016040519081016040528092919081815260200182805461070690614171565b80156107535780601f1061072857610100808354040283529160200191610753565b820191906000526020600020905b81548152906001019060200180831161073657829003601f168201915b5050505050905090565b600061076a3384846122f3565b50600192915050565b60008061077f60355490565b90508061078f5750600092915050565b6001831515146107c357806107a261133b565b6107b490670de0b6b3a764000061410f565b6107be91906140ed565b6107e8565b806107cc6117e9565b6107de90670de0b6b3a764000061410f565b6107e891906140ed565b9392505050565b60006107fc84848461244c565b6001600160a01b03841660009081526034602090815260408083203384529091529020548281101561089b5760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206160448201527f6c6c6f77616e636500000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6108a885338584036122f3565b506001949350505050565b6065546001600160a01b03163314806108d75750610104546001600160a01b031633145b6109195760405162461bcd60e51b815260206004820152601360248201527227b7363c9037bbb732b91037b91030b236b4b760691b6044820152606401610892565b60975460ff161561095f5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610892565b610967612665565b565b600260c95414156109bc5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610892565b600260c95580610a0e5760405162461bcd60e51b815260206004820152600e60248201527f496e76616c696420416d6f756e740000000000000000000000000000000000006044820152606401610892565b33600090815260336020526040902054811115610a6d5760405162461bcd60e51b815260206004820152601260248201527f4e6f7420656e6f7567682062616c616e636500000000000000000000000000006044820152606401610892565b3360009081526101076020526040902054431415610acd5760405162461bcd60e51b815260206004820152601a60248201527f57697468647261772077697468696e2073616d6520626c6f636b0000000000006044820152606401610892565b6000610ad860355490565b82610ae161133b565b610aeb919061410f565b610af591906140ed565b60fe5460fd546040516370a0823160e01b81523060048201529293506000926001600160a01b03909116906370a082319060240160206040518083038186803b158015610b4157600080fd5b505afa158015610b55573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b799190613e5c565b610b83919061412e565b905081811015610c2657610108547373feaa1ee314f8c655e354234017be2193c9e24e9063441a3e7090610bb7848661412e565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815260048101929092526024820152604401600060405180830381600087803b158015610c0d57600080fd5b505af1158015610c21573d6000803e3d6000fd5b505050505b610c303384612b08565b60fd54610c47906001600160a01b03163384612c8a565b60408051338152602081018490529081018490527ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5689060600160405180910390a15050600160c95550565b3360008181526034602090815260408083206001600160a01b0387168452909152812054909161076a918590610cc99086906140d5565b6122f3565b6065546001600160a01b0316331480610cf25750610104546001600160a01b031633145b610d345760405162461bcd60e51b815260206004820152601360248201527227b7363c9037bbb732b91037b91030b236b4b760691b6044820152606401610892565b60975460ff16610d865760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f74207061757365640000000000000000000000006044820152606401610892565b610d8e612d33565b50610967612e53565b6065546001600160a01b03163314610df15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610892565b61010082905560ff8190556040518281527f603ccedf3d21d18b0f02ac69dfca121f1b4d6626b8a6840446b5cc81aa2cc1c19060200160405180910390a16040518181527f5cdc47cbc2be1e35e5429dd646b1e2047ab328f4108873ab71318989f7566ceb906020015b60405180910390a15050565b6065546001600160a01b0316331480610e8b5750610104546001600160a01b031633145b610ecd5760405162461bcd60e51b815260206004820152601360248201527227b7363c9037bbb732b91037b91030b236b4b760691b6044820152606401610892565b6001600160a01b03821660008181526101066020908152604091829020805460ff19168515159081179091558251938452908301527ff6019ec0a78d156d249a1ec7579e2321f6ac7521d6e1d2eacf90ba4a184dcceb9101610e5b565b6065546001600160a01b03163314610f845760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610892565b61010480546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527f848ac24ab84501710d6631faab117b66b79aba7ec6f7778cf3bcff428c1a4efc9101610e5b565b6065546001600160a01b031633146110395760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610892565b6109676000612eef565b6065546001600160a01b0316331461109d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610892565b61010280546001600160a01b0319166001600160a01b0383169081179091556040519081527f46d11399b0e4a268da86e8592a33fc6896eb2244f1609819171eff3820fd6e69906020015b60405180910390a150565b6000806110fe61133b565b9050600060fd60009054906101000a90046001600160a01b03166001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561115057600080fd5b505afa158015611164573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111889190613e5c565b60fd54604080517f0902f1ac000000000000000000000000000000000000000000000000000000008152815193945060009384936001600160a01b031692630902f1ac9260048082019391829003018186803b1580156111e757600080fd5b505afa1580156111fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061121f9190613f6a565b9092509050600083611231848761410f565b61123b91906140ed565b905060008461124a848861410f565b61125491906140ed565b60fc5490915061126c906001600160a01b0316612f41565b611276908261410f565b60fb5461128b906001600160a01b0316612f41565b611295908461410f565b61129f91906140d5565b96506112b3670de0b6b3a7640000886140ed565b965050505050505090565b6065546001600160a01b031633146113185760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610892565b610109805460ff1916911515919091179055565b6060603780546106da90614171565b610108546040516393f1a40b60e01b8152600481019190915230602482015260009081907373feaa1ee314f8c655e354234017be2193c9e24e906393f1a40b90604401604080518083038186803b15801561139557600080fd5b505afa1580156113a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113cd9190613f6a565b5060fe5460fd546040516370a0823160e01b8152306004820152929350909183916001600160a01b0316906370a082319060240160206040518083038186803b15801561141957600080fd5b505afa15801561142d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114519190613e5c565b61145b91906140d5565b611465919061412e565b91505090565b3360009081526034602090815260408083206001600160a01b0386168452909152812054828110156115055760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f0000000000000000000000000000000000000000000000000000006064820152608401610892565b61151233858584036122f3565b5060019392505050565b6065546001600160a01b031633146115765760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610892565b61010180546001600160a01b0319166001600160a01b0383169081179091556040519081527f60edc991b058a7e279075cf86f19a6b478334efec47e089d09890b139c782327906020016110e8565b600061076a33848461244c565b600260c95414156116255760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610892565b600260c95560975460ff16156116705760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610892565b600081116116c05760405162461bcd60e51b815260206004820152600e60248201527f496e76616c696420616d6f756e740000000000000000000000000000000000006044820152606401610892565b60006116ca61133b565b60fd549091506116e5906001600160a01b03163330856130c3565b6101095460ff161515600114801561170e5750336000908152610106602052604090205460ff16155b156117585760006127106101005484611727919061410f565b61173191906140ed565b905061173d818461412e565b92508060fe600082825461175191906140d5565b9091555050505b3360009081526101076020526040812043905560355490811561178f5782611780838661410f565b61178a91906140ed565b611791565b835b905061179d3382613114565b60408051338152602081018690529081018290527f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a159060600160405180910390a15050600160c9555050565b600080730567f2323251f0aab15c8dfb1967e4e8a7d42aee6001600160a01b03166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561183957600080fd5b505afa15801561184d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118719190613e5c565b90506305f5e100816118816110f3565b61188b919061410f565b61146591906140ed565b6065546001600160a01b03163314806118b95750610104546001600160a01b031633145b6118fb5760405162461bcd60e51b815260206004820152601360248201527227b7363c9037bbb732b91037b91030b236b4b760691b6044820152606401610892565b60fe5415610967576000600560fe546002611916919061410f565b61192091906140ed565b6101015460fd54919250611941916001600160a01b03908116911683612c8a565b6101025460fd5461195f916001600160a01b03918216911683612c8a565b6101035461199a906001600160a01b031661197a83806140d5565b60fe54611987919061412e565b60fd546001600160a01b03169190612c8a565b50600060fe55565b6065546001600160a01b03163314806119c65750610104546001600160a01b031633145b611a085760405162461bcd60e51b815260206004820152601360248201527227b7363c9037bbb732b91037b91030b236b4b760691b6044820152606401610892565b60975460ff1615611a4e5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610892565b611a566131f3565b611a5e612665565b610108546040516393f1a40b60e01b815260048101919091523060248201526000907373feaa1ee314f8c655e354234017be2193c9e24e906393f1a40b90604401604080518083038186803b158015611ab657600080fd5b505afa158015611aca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aee9190613f6a565b5090508015611b8257610108546040517f441a3e700000000000000000000000000000000000000000000000000000000081526004810191909152602481018290527373feaa1ee314f8c655e354234017be2193c9e24e9063441a3e7090604401600060405180830381600087803b158015611b6957600080fd5b505af1158015611b7d573d6000803e3d6000fd5b505050505b6040518181527f99d7f8b71cfb9126984f7a5eed3a40e64a8959e9b0e442221546fb04ec6a489c906020016110e8565b600054610100900460ff1680611bcb575060005460ff16155b611c2e5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610892565b600054610100900460ff16158015611c50576000805461ffff19166101011790555b611c5a888861326e565b611c62613334565b610109805460ff191660011790556107d060ff556103e8610100556101088690556040517f1526fe27000000000000000000000000000000000000000000000000000000008152600481018790526000907373feaa1ee314f8c655e354234017be2193c9e24e90631526fe279060240160806040518083038186803b158015611cea57600080fd5b505afa158015611cfe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d229190613d36565b505060fd80546001600160a01b0319166001600160a01b038416908117909155604080517f0dfe168100000000000000000000000000000000000000000000000000000000815290519394509092630dfe168192506004808301926020929190829003018186803b158015611d9657600080fd5b505afa158015611daa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dce9190613c45565b60fb80546001600160a01b0319166001600160a01b0392831617905560fd54604080517fd21220a70000000000000000000000000000000000000000000000000000000081529051919092169163d21220a7916004808301926020929190829003018186803b158015611e4057600080fd5b505afa158015611e54573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e789190613c45565b60fc80546001600160a01b03199081166001600160a01b0393841617909155610101805482168984161790556101028054821688841617905561010380548216878416179055610104805490911685831617905560fd54611ef191167373feaa1ee314f8c655e354234017be2193c9e24e6000196133f6565b611f26730e09fabb73bd3ade0a17ecc321fd13a19e81ce827310ed43c718714eb63d5aa57b78b54704e256024e6000196133f6565b60fb5460405163095ea7b360e01b81527310ed43c718714eb63d5aa57b78b54704e256024e600482015260001960248201526001600160a01b039091169063095ea7b390604401602060405180830381600087803b158015611f8757600080fd5b505af1158015611f9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fbf9190613e3f565b5060fc5460405163095ea7b360e01b81527310ed43c718714eb63d5aa57b78b54704e256024e600482015260001960248201526001600160a01b039091169063095ea7b390604401602060405180830381600087803b15801561202157600080fd5b505af1158015612035573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120599190613e3f565b5050801561206d576000805461ff00191690555b5050505050505050565b6065546001600160a01b031633148061209b5750610104546001600160a01b031633145b6120dd5760405162461bcd60e51b815260206004820152601360248201527227b7363c9037bbb732b91037b91030b236b4b760691b6044820152606401610892565b60975460ff16156121235760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610892565b61212b611895565b6000612135612d33565b90507fa09b7ae452b7bffb9e204c3a016e80caeecf46f554d112644f36fa114dac6ffa816040516110e891815260200190565b6065546001600160a01b031633146121c25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610892565b61010380546001600160a01b0319166001600160a01b0383169081179091556040519081527fe69c832dd268bca67b9623f0d9fe5b1adbd99b1e29a7492a1817b2fea90d5b64906020016110e8565b6065546001600160a01b0316331461226b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610892565b6001600160a01b0381166122e75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610892565b6122f081612eef565b50565b6001600160a01b03831661236e5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f72657373000000000000000000000000000000000000000000000000000000006064820152608401610892565b6001600160a01b0382166123ea5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f73730000000000000000000000000000000000000000000000000000000000006064820152608401610892565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166124c85760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f64726573730000000000000000000000000000000000000000000000000000006064820152608401610892565b6001600160a01b0382166125445760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f65737300000000000000000000000000000000000000000000000000000000006064820152608401610892565b6001600160a01b038316600090815260336020526040902054818110156125d35760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e636500000000000000000000000000000000000000000000000000006064820152608401610892565b6001600160a01b0380851660009081526033602052604080822085850390559185168152908120805484929061260a9084906140d5565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161265691815260200190565b60405180910390a35b50505050565b6040516370a0823160e01b8152306004820152600090730e09fabb73bd3ade0a17ecc321fd13a19e81ce82906370a082319060240160206040518083038186803b1580156126b257600080fd5b505afa1580156126c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126ea9190613e5c565b905080156122f05760fb546000906001600160a01b0316730e09fabb73bd3ade0a17ecc321fd13a19e81ce82146127705760fb5461275190730e09fabb73bd3ade0a17ecc321fd13a19e81ce82906001600160a01b031661274c6002866140ed565b61353a565b600181518110612763576127636141c2565b602002602001015161277b565b61277b6002836140ed565b60fc549091506000906001600160a01b0316730e09fabb73bd3ade0a17ecc321fd13a19e81ce82146127f75760fc546127d890730e09fabb73bd3ade0a17ecc321fd13a19e81ce82906001600160a01b031661274c6002876140ed565b6001815181106127ea576127ea6141c2565b6020026020010151612802565b6128026002846140ed565b60fb5460fc546040517fe8e337000000000000000000000000000000000000000000000000000000000081526001600160a01b03928316600482015291166024820152604481018490526064810182905260006084820181905260a482018190523060c48301524260e48301529192507310ed43c718714eb63d5aa57b78b54704e256024e9063e8e337009061010401606060405180830381600087803b1580156128ac57600080fd5b505af11580156128c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128e49190613f8e565b92505050600061271060ff54836128fb919061410f565b61290591906140ed565b90508060fe600082825461291991906140d5565b909155506129279050612d33565b50604080516002808252606082018352600092602083019080368337019050509050730e09fabb73bd3ade0a17ecc321fd13a19e81ce8281600081518110612971576129716141c2565b60200260200101906001600160a01b031690816001600160a01b03168152505073bb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c816001815181106129b9576129b96141c2565b6001600160a01b039092166020928302919091019091015260405163d06ca61f60e01b81526000907310ed43c718714eb63d5aa57b78b54704e256024e9063d06ca61f90612a1590670de0b6b3a764000090869060040161401c565b60006040518083038186803b158015612a2d57600080fd5b505afa158015612a41573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052612a699190810190613d75565b600181518110612a7b57612a7b6141c2565b602002602001015190507f913f67bfd2c6ac4a84007665147ed6861715996d03ed38d610c52e28c08838038188612ab2919061410f565b60405190815260200160405180910390a17f6d415483528749d9b4bfa85837aeca6271d845839c39bfa4614240e15dabeb1e612aee828561410f565b60405190815260200160405180910390a150505050505050565b6001600160a01b038216612b845760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f73000000000000000000000000000000000000000000000000000000000000006064820152608401610892565b6001600160a01b03821660009081526033602052604090205481811015612c135760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f63650000000000000000000000000000000000000000000000000000000000006064820152608401610892565b6001600160a01b0383166000908152603360205260408120838303905560358054849290612c4290849061412e565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161243f565b505050565b6040516001600160a01b038316602482015260448101829052612c859084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152613677565b60fe5460fd546040516370a0823160e01b8152306004820152600092916001600160a01b0316906370a082319060240160206040518083038186803b158015612d7b57600080fd5b505afa158015612d8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612db39190613e5c565b612dbd919061412e565b90508015612e5057610108546040517fe2bbb1580000000000000000000000000000000000000000000000000000000081526004810191909152602481018290527373feaa1ee314f8c655e354234017be2193c9e24e9063e2bbb15890604401600060405180830381600087803b158015612e3757600080fd5b505af1158015612e4b573d6000803e3d6000fd5b505050505b90565b60975460ff16612ea55760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f74207061757365640000000000000000000000006044820152606401610892565b6097805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006001600160a01b03821673bb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c1415612f775750670de0b6b3a7640000919050565b6040805160028082526060820183526000926020830190803683370190505090508281600081518110612fac57612fac6141c2565b60200260200101906001600160a01b031690816001600160a01b03168152505073bb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c81600181518110612ff457612ff46141c2565b6001600160a01b039092166020928302919091019091015260405163d06ca61f60e01b81527310ed43c718714eb63d5aa57b78b54704e256024e9063d06ca61f9061304d90670de0b6b3a764000090859060040161401c565b60006040518083038186803b15801561306557600080fd5b505afa158015613079573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526130a19190810190613d75565b6001815181106130b3576130b36141c2565b6020026020010151915050919050565b6040516001600160a01b038085166024830152831660448201526064810182905261265f9085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401612ccf565b6001600160a01b03821661316a5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610892565b806035600082825461317c91906140d5565b90915550506001600160a01b038216600090815260336020526040812080548392906131a99084906140d5565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b60975460ff16156132395760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610892565b6097805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258612ed23390565b600054610100900460ff1680613287575060005460ff16155b6132ea5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610892565b600054610100900460ff1615801561330c576000805461ffff19166101011790555b61331461375c565b61331e838361380d565b8015612c85576000805461ff0019169055505050565b600054610100900460ff168061334d575060005460ff16155b6133b05760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610892565b600054610100900460ff161580156133d2576000805461ffff19166101011790555b6133da61375c565b6133e26138e9565b80156122f0576000805461ff001916905550565b80158061349857506040517fdd62ed3e0000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b15801561345e57600080fd5b505afa158015613472573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134969190613e5c565b155b61350a5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e6365000000000000000000006064820152608401610892565b6040516001600160a01b038316602482015260448101829052612c8590849063095ea7b360e01b90606401612ccf565b604080516002808252606080830184529260009291906020830190803683370190505090508481600081518110613573576135736141c2565b60200260200101906001600160a01b031690816001600160a01b03168152505083816001815181106135a7576135a76141c2565b6001600160a01b03909216602092830291909101909101526040517f38ed17390000000000000000000000000000000000000000000000000000000081527310ed43c718714eb63d5aa57b78b54704e256024e906338ed173990613618908690600090869030904290600401614068565b600060405180830381600087803b15801561363257600080fd5b505af1158015613646573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261366e9190810190613d75565b95945050505050565b60006136cc826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166139909092919063ffffffff16565b805190915015612c8557808060200190518101906136ea9190613e3f565b612c855760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610892565b600054610100900460ff1680613775575060005460ff16155b6137d85760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610892565b600054610100900460ff161580156133e2576000805461ffff191661010117905580156122f0576000805461ff001916905550565b600054610100900460ff1680613826575060005460ff16155b6138895760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610892565b600054610100900460ff161580156138ab576000805461ffff19166101011790555b82516138be906036906020860190613b1f565b5081516138d2906037906020850190613b1f565b508015612c85576000805461ff0019169055505050565b600054610100900460ff1680613902575060005460ff16155b6139655760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610892565b600054610100900460ff16158015613987576000805461ffff19166101011790555b6133e233612eef565b606061399f84846000856139a7565b949350505050565b606082471015613a1f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610892565b843b613a6d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610892565b600080866001600160a01b03168587604051613a899190614000565b60006040518083038185875af1925050503d8060008114613ac6576040519150601f19603f3d011682016040523d82523d6000602084013e613acb565b606091505b5091509150613adb828286613ae6565b979650505050505050565b60608315613af55750816107e8565b825115613b055782518084602001fd5b8160405162461bcd60e51b81526004016108929190614035565b828054613b2b90614171565b90600052602060002090601f016020900481019282613b4d5760008555613b93565b82601f10613b6657805160ff1916838001178555613b93565b82800160010185558215613b93579182015b82811115613b93578251825591602001919060010190613b78565b50613b9f929150613ba3565b5090565b5b80821115613b9f5760008155600101613ba4565b600082601f830112613bc957600080fd5b813567ffffffffffffffff811115613be357613be36141d8565b613bf6601f8201601f19166020016140a4565b818152846020838601011115613c0b57600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215613c3a57600080fd5b81356107e8816141ee565b600060208284031215613c5757600080fd5b81516107e8816141ee565b60008060408385031215613c7557600080fd5b8235613c80816141ee565b91506020830135613c90816141ee565b809150509250929050565b600080600060608486031215613cb057600080fd5b8335613cbb816141ee565b92506020840135613ccb816141ee565b929592945050506040919091013590565b60008060408385031215613cef57600080fd5b8235613cfa816141ee565b91506020830135613c9081614203565b60008060408385031215613d1d57600080fd5b8235613d28816141ee565b946020939093013593505050565b60008060008060808587031215613d4c57600080fd5b8451613d57816141ee565b60208601516040870151606090970151919890975090945092505050565b60006020808385031215613d8857600080fd5b825167ffffffffffffffff80821115613da057600080fd5b818501915085601f830112613db457600080fd5b815181811115613dc657613dc66141d8565b8060051b9150613dd78483016140a4565b8181528481019084860184860187018a1015613df257600080fd5b600095505b83861015613e15578051835260019590950194918601918601613df7565b5098975050505050505050565b600060208284031215613e3457600080fd5b81356107e881614203565b600060208284031215613e5157600080fd5b81516107e881614203565b600060208284031215613e6e57600080fd5b5051919050565b600080600080600080600060e0888a031215613e9057600080fd5b873567ffffffffffffffff80821115613ea857600080fd5b613eb48b838c01613bb8565b985060208a0135915080821115613eca57600080fd5b50613ed78a828b01613bb8565b965050604088013594506060880135613eef816141ee565b93506080880135613eff816141ee565b925060a0880135613f0f816141ee565b915060c0880135613f1f816141ee565b8091505092959891949750929550565b600060208284031215613f4157600080fd5b5035919050565b60008060408385031215613f5b57600080fd5b50508035926020909101359150565b60008060408385031215613f7d57600080fd5b505080516020909101519092909150565b600080600060608486031215613fa357600080fd5b8351925060208401519150604084015190509250925092565b600081518084526020808501945080840160005b83811015613ff55781516001600160a01b031687529582019590820190600101613fd0565b509495945050505050565b60008251614012818460208701614145565b9190910192915050565b82815260406020820152600061399f6040830184613fbc565b6020815260008251806020840152614054816040850160208701614145565b601f01601f19169190910160400192915050565b85815284602082015260a06040820152600061408760a0830186613fbc565b6001600160a01b0394909416606083015250608001529392505050565b604051601f8201601f1916810167ffffffffffffffff811182821017156140cd576140cd6141d8565b604052919050565b600082198211156140e8576140e86141ac565b500190565b60008261410a57634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615614129576141296141ac565b500290565b600082821015614140576141406141ac565b500390565b60005b83811015614160578181015183820152602001614148565b8381111561265f5750506000910152565b600181811c9082168061418557607f821691505b602082108114156141a657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146122f057600080fd5b80151581146122f057600080fdfea264697066735822122048d0cacee402ecebeb9a14f19c66f23f444356db5f541d25eb96bb4aa1b231ed64736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "deposit(uint256)": {
        "params": {
          "_amount": "amount of lptokens to deposit"
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setFee(uint256,uint256)": {
        "params": {
          "_depositFeePerc": "deposit fee percentage. 1000 for 10%",
          "_yieldFeePerc": "deposit fee percentage. 2000 for 20%"
        }
      },
      "setFeeStatus(bool)": {
        "details": "Function to enable/disable deposit fee "
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "withdraw(uint256)": {
        "params": {
          "_shares": "amount of shares to burn"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "emergencyWithdraw()": {
        "notice": "Withdraws funds staked in mirror to this vault and pauses deposit, yield, invest functions"
      },
      "reInvest()": {
        "notice": "Unpauses deposit, yield, invest functions, and invests funds."
      },
      "setFee(uint256,uint256)": {
        "notice": "Function to set deposit and yield fee"
      },
      "transferFees()": {
        "notice": "transfers out fees from vault"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 130,
        "contract": "contracts/BSCL1/vault.sol:BscVault",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 133,
        "contract": "contracts/BSCL1/vault.sol:BscVault",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 1529,
        "contract": "contracts/BSCL1/vault.sol:BscVault",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 360,
        "contract": "contracts/BSCL1/vault.sol:BscVault",
        "label": "_balances",
        "offset": 0,
        "slot": "51",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 366,
        "contract": "contracts/BSCL1/vault.sol:BscVault",
        "label": "_allowances",
        "offset": 0,
        "slot": "52",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 368,
        "contract": "contracts/BSCL1/vault.sol:BscVault",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "53",
        "type": "t_uint256"
      },
      {
        "astId": 370,
        "contract": "contracts/BSCL1/vault.sol:BscVault",
        "label": "_name",
        "offset": 0,
        "slot": "54",
        "type": "t_string_storage"
      },
      {
        "astId": 372,
        "contract": "contracts/BSCL1/vault.sol:BscVault",
        "label": "_symbol",
        "offset": 0,
        "slot": "55",
        "type": "t_string_storage"
      },
      {
        "astId": 913,
        "contract": "contracts/BSCL1/vault.sol:BscVault",
        "label": "__gap",
        "offset": 0,
        "slot": "56",
        "type": "t_array(t_uint256)45_storage"
      },
      {
        "astId": 10,
        "contract": "contracts/BSCL1/vault.sol:BscVault",
        "label": "_owner",
        "offset": 0,
        "slot": "101",
        "type": "t_address"
      },
      {
        "astId": 123,
        "contract": "contracts/BSCL1/vault.sol:BscVault",
        "label": "__gap",
        "offset": 0,
        "slot": "102",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 191,
        "contract": "contracts/BSCL1/vault.sol:BscVault",
        "label": "_paused",
        "offset": 0,
        "slot": "151",
        "type": "t_bool"
      },
      {
        "astId": 282,
        "contract": "contracts/BSCL1/vault.sol:BscVault",
        "label": "__gap",
        "offset": 0,
        "slot": "152",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 297,
        "contract": "contracts/BSCL1/vault.sol:BscVault",
        "label": "_status",
        "offset": 0,
        "slot": "201",
        "type": "t_uint256"
      },
      {
        "astId": 340,
        "contract": "contracts/BSCL1/vault.sol:BscVault",
        "label": "__gap",
        "offset": 0,
        "slot": "202",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 1699,
        "contract": "contracts/BSCL1/vault.sol:BscVault",
        "label": "token0",
        "offset": 0,
        "slot": "251",
        "type": "t_contract(IERC20Upgradeable)992"
      },
      {
        "astId": 1702,
        "contract": "contracts/BSCL1/vault.sol:BscVault",
        "label": "token1",
        "offset": 0,
        "slot": "252",
        "type": "t_contract(IERC20Upgradeable)992"
      },
      {
        "astId": 1705,
        "contract": "contracts/BSCL1/vault.sol:BscVault",
        "label": "lpToken",
        "offset": 0,
        "slot": "253",
        "type": "t_contract(IUniPair)1612"
      },
      {
        "astId": 1719,
        "contract": "contracts/BSCL1/vault.sol:BscVault",
        "label": "_fees",
        "offset": 0,
        "slot": "254",
        "type": "t_uint256"
      },
      {
        "astId": 1724,
        "contract": "contracts/BSCL1/vault.sol:BscVault",
        "label": "yieldFee",
        "offset": 0,
        "slot": "255",
        "type": "t_uint256"
      },
      {
        "astId": 1726,
        "contract": "contracts/BSCL1/vault.sol:BscVault",
        "label": "depositFee",
        "offset": 0,
        "slot": "256",
        "type": "t_uint256"
      },
      {
        "astId": 1728,
        "contract": "contracts/BSCL1/vault.sol:BscVault",
        "label": "treasuryWallet",
        "offset": 0,
        "slot": "257",
        "type": "t_address"
      },
      {
        "astId": 1730,
        "contract": "contracts/BSCL1/vault.sol:BscVault",
        "label": "communityWallet",
        "offset": 0,
        "slot": "258",
        "type": "t_address"
      },
      {
        "astId": 1732,
        "contract": "contracts/BSCL1/vault.sol:BscVault",
        "label": "strategist",
        "offset": 0,
        "slot": "259",
        "type": "t_address"
      },
      {
        "astId": 1734,
        "contract": "contracts/BSCL1/vault.sol:BscVault",
        "label": "admin",
        "offset": 0,
        "slot": "260",
        "type": "t_address"
      },
      {
        "astId": 1736,
        "contract": "contracts/BSCL1/vault.sol:BscVault",
        "label": "mAsset",
        "offset": 0,
        "slot": "261",
        "type": "t_address"
      },
      {
        "astId": 1740,
        "contract": "contracts/BSCL1/vault.sol:BscVault",
        "label": "isWhitelisted",
        "offset": 0,
        "slot": "262",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 1744,
        "contract": "contracts/BSCL1/vault.sol:BscVault",
        "label": "depositedBlock",
        "offset": 0,
        "slot": "263",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1746,
        "contract": "contracts/BSCL1/vault.sol:BscVault",
        "label": "pid",
        "offset": 0,
        "slot": "264",
        "type": "t_uint256"
      },
      {
        "astId": 1748,
        "contract": "contracts/BSCL1/vault.sol:BscVault",
        "label": "feeOn",
        "offset": 0,
        "slot": "265",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)45_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[45]",
        "numberOfBytes": "1440"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IERC20Upgradeable)992": {
        "encoding": "inplace",
        "label": "contract IERC20Upgradeable",
        "numberOfBytes": "20"
      },
      "t_contract(IUniPair)1612": {
        "encoding": "inplace",
        "label": "contract IUniPair",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}